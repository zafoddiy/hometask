<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="differential_robot">
  <xacro:property name="wheelmass" value="0.015" />
  <xacro:property name="wheelradius" value="0.036" />
  <xacro:property name="basewidth" value="0.350" />

  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>

  <link name="base_footprint"/>

  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <cylinder length="0.03" radius="${basewidth/2}"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.03" radius="${basewidth/2}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.100"/>
      <inertia ixx="0.000773125" ixy="0.0" ixz="0.0" iyy="0.000773125" iyz="0.0" izz="0.00153125"/>
    </inertial>
  </link>
  
  <gazebo reference="base_link">
    <material>Gazebo/Red</material>
  </gazebo>  

  <joint name="footprint_to_base" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="0 0 0.036"/>
  </joint>  

  <link name="left_wheel">
    <visual>
      <geometry>
        <cylinder length="0.03" radius="${wheelradius}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.03" radius="${wheelradius}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="${wheelmass}"/>
      <inertia ixx="5.985e-6" ixy="0.0" ixz="0.0" iyy="5.985e-6" iyz="0.0" izz="9.72e-6"/>
    </inertial>
  </link>
  
  <gazebo reference="left_wheel">
    <material>Gazebo/Black</material>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
  </gazebo>     

  <joint name="base_to_left_wheel" type="continuous">
    <axis xyz="0 0 1"/>
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <origin rpy="-1.57075 0 0" xyz="0 ${basewidth/2} 0"/>
  </joint>

  <link name="left_wheel_marker">
    <visual>
      <geometry>
        <box size="0.03 0.001 0.01"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="white"/>
    </visual>
  </link>

  <joint name="left_wheel_to_marker" type="fixed">
    <parent link="left_wheel"/>
    <child link="left_wheel_marker"/>
    <origin rpy="-1.57075 0 0" xyz="0 0 0.0155"/>
  </joint>

  <link name="right_wheel">
    <visual>
      <geometry>
        <cylinder length="0.030" radius="${wheelradius}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.03" radius="${wheelradius}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="${wheelmass}"/>
      <inertia ixx="5.985e-6" ixy="0.0" ixz="0.0" iyy="5.985e-6" iyz="0.0" izz="9.72e-6"/>
    </inertial>   
  </link>

  <gazebo reference="right_wheel">
    <material>Gazebo/Black</material>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
  </gazebo>   

  <joint name="base_to_right_wheel" type="continuous">
    <axis xyz="0 0 -1"/>
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <origin rpy="1.57075 0 0" xyz="0 ${-basewidth/2} 0"/>
  </joint>

  <link name="right_wheel_marker">
    <visual>
      <geometry>
        <box size="0.03 0.001 0.01"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="white"/>
    </visual>
  </link>

  <joint name="right_wheel_to_marker" type="fixed">
    <parent link="right_wheel"/>
    <child link="right_wheel_marker"/>
    <origin rpy="1.57075 0 0" xyz="0 0 0.0155"/>
  </joint>

  <link name="head">
    <visual>
      <geometry>
        <box size="0.030 0.030 0.030"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.03 0.03 0.03"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.02"/>
      <inertia ixx="3e-6" ixy="0.0" ixz="0.0" iyy="3e-6" iyz="0.0" izz="3e-6"/>
    </inertial>  
  </link>
  
  <gazebo reference="head">
    <material>Gazebo/Blue</material>
  </gazebo>    
  
  <joint name="base_to_head" type="fixed">
    <parent link="base_link"/>
    <child link="head"/>
    <origin xyz="0.130 0 0.030"/>
  </joint>
  
  <link name="passive_wheel_holder">
    <visual>
      <geometry>
        <cylinder length="0.016" radius="0.005"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="white"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.016" radius="0.005"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.02"/>
      <inertia ixx="5.51666667e-7" ixy="0.0" ixz="0.0" iyy="5.51666667e-7" iyz="0.0" izz="2.5e-7"/>
    </inertial>  
  </link>
  
  <gazebo reference="passive_wheel_holder">
    <material>Gazebo/White</material>
  </gazebo>    
  
  <joint name="base_to_holder" type="fixed">
    <parent link="base_link"/>
    <child link="passive_wheel_holder"/>
    <origin xyz="0.125 0 -0.023"/>
  </joint>
  
  <link name="passive_wheel">
    <visual>
      <geometry>
        <sphere radius="0.005"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="white"/>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.005"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.02"/>
      <inertia ixx="2e-7" ixy="0.0" ixz="0.0" iyy="2e-7" iyz="0.0" izz="2e-7"/>
    </inertial>  
  </link>
  
  <gazebo reference="passive_wheel">
    <material>Gazebo/White</material>
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
  </gazebo>    
  
  <joint name="holder_to_wheel" type="fixed">
    <parent link="passive_wheel_holder"/>
    <child link="passive_wheel"/>
    <origin xyz="0 0 -0.008"/>
  </joint>
  
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

      <!-- Plugin update rate in Hz -->
      <update_rate>50.0</update_rate>

      <!-- Name of left joint, defaults to `left_joint` -->
      <left_joint>base_to_left_wheel</left_joint>

      <!-- Name of right joint, defaults to `right_joint` -->
      <right_joint>base_to_right_wheel</right_joint>

      <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
      <wheel_separation>${basewidth}</wheel_separation>

      <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
      <wheel_diameter>${wheelradius*2}</wheel_diameter>

      <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
      <wheel_acceleration>5.0</wheel_acceleration>

      <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
      <wheel_torque>100</wheel_torque>

      <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
      <command_topic>cmd_vel</command_topic>

      <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
      <odometry_topic>odom</odometry_topic>

      <!-- Odometry frame, defaults to `odom` -->
      <odometry_frame>odom</odometry_frame>

      <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
      <robot_base_frame>base_footprint</robot_base_frame>

      <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
      <odometry_source>1</odometry_source>

      <!-- Set to true to publish transforms for the wheel links, defaults to false -->
      <publish_wheel_tf>true</publish_wheel_tf>

      <!-- Set to true to publish transforms for the odometry, defaults to true -->
      <publish_odom>true</publish_odom>

      <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
      <publish_wheel_joint_state>true</publish_wheel_joint_state>

	    <publish_odom_tf>true</publish_odom_tf>

      <!-- Set to true to swap right and left wheels, defaults to true -->
      <legacy_mode>false</legacy_mode>
      <ros>
        <remapping>odom:=diff_cont/odom</remapping>
        <remapping>cmd_vel:=diff_cont/cmd_vel</remapping>
      </ros>          
    </plugin>
    <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
      <ros>
        <remapping>odom:=ground_truth</remapping>
      </ros>
      <update_rate>50.0</update_rate>
      <body_name>base_footprint</body_name>
      <gaussian_noise>0.0</gaussian_noise>
      <frame_name>odom</frame_name>
      <xyz_offset>0 0 0</xyz_offset>
      <rpy_offset>0 0 0</rpy_offset>
    </plugin> 
  </gazebo>
  <gazebo reference="head">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>head</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
</robot>
